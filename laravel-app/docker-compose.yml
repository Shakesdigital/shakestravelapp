version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shakestravelapp_app
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=db
      - DB_DATABASE=shakestravelapp
      - DB_USERNAME=shakestravelapp_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - storage_data:/var/www/html/storage
      - ./logs:/var/www/html/storage/logs
    depends_on:
      - db
      - redis
    networks:
      - shakestravelapp_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: shakestravelapp_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/production.conf:/etc/nginx/conf.d/default.conf
      - ./public:/var/www/html/public:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - shakestravelapp_network

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: shakestravelapp_db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=shakestravelapp
      - MYSQL_USER=shakestravelapp_user
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    networks:
      - shakestravelapp_network

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: shakestravelapp_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - shakestravelapp_network

  # Laravel Queue Worker
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shakestravelapp_queue
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
    environment:
      - APP_ENV=production
      - DB_HOST=db
      - DB_DATABASE=shakestravelapp
      - DB_USERNAME=shakestravelapp_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - storage_data:/var/www/html/storage
    depends_on:
      - db
      - redis
    networks:
      - shakestravelapp_network

  # Laravel Scheduler
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shakestravelapp_scheduler
    restart: unless-stopped
    command: php artisan schedule:work
    environment:
      - APP_ENV=production
      - DB_HOST=db
      - DB_DATABASE=shakestravelapp
      - DB_USERNAME=shakestravelapp_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
    volumes:
      - storage_data:/var/www/html/storage
    depends_on:
      - db
      - redis
    networks:
      - shakestravelapp_network

  # Laravel Horizon (Queue Dashboard)
  horizon:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shakestravelapp_horizon
    restart: unless-stopped
    command: php artisan horizon
    environment:
      - APP_ENV=production
      - DB_HOST=db
      - DB_DATABASE=shakestravelapp
      - DB_USERNAME=shakestravelapp_user
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - storage_data:/var/www/html/storage
    depends_on:
      - db
      - redis
    networks:
      - shakestravelapp_network

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  storage_data:
    driver: local

networks:
  shakestravelapp_network:
    driver: bridge
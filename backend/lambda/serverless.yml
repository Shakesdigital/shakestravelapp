service: shakes-travel-backend

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'prod'}
  memorySize: 512
  timeout: 30
  environment:
    NODE_ENV: production
    MONGODB_URI: mongodb+srv://shakertravel:ShakesTravel2024@shakestravelcluster.nrdj0.mongodb.net/shakestraveldb?retryWrites=true&w=majority
    JWT_SECRET: ShakesTravel2024SuperSecureJWTSecretKeyForProductionDeployment
    JWT_REFRESH_SECRET: ShakesTravel2024UltraSecureRefreshJWTSecretKeyForProductionDeployment
    CORS_ORIGIN: https://shakestravelapp.netlify.app,https://d1234567890abc.cloudfront.net
    
  iamRoleStatements:
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: 
        - 'Fn::Join':
          - ':'
          - - 'arn:aws:logs'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'log-group:/aws/lambda/*:*:*'

functions:
  app:
    handler: handler.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: 'https://shakestravelapp.netlify.app'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - http:
          path: /
          method: ANY
          cors:
            origin: 'https://shakestravelapp.netlify.app'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  serverless-offline:
    httpPort: 5000
    lambdaPort: 3002
  dotenv:
    path: ./.env

package:
  exclude:
    - node_modules/.cache/**
    - .git/**
    - .ebextensions/**
    - Dockerfile*
    - scripts/**
    - tests/**